{"version":3,"sources":["logo.svg","redux/action/index.js","components/login/index.js","components/executive/index.js","components/manger/index.js","components/home/index.js","components/nav/index.js","components/add_medicine/index.js","components/view_medicines/index.js","components/edit_medicine/index.js","components/add_executive/index.js","components/view_team/index.js","components/edit_executive/index.js","components/order/index.js","components/view_orders/index.js","components/edit_order/index.js","App.js","reportWebVitals.js","redux/reducers/executive/index.js","redux/reducers/medicine/index.js","redux/reducers/order/index.js","redux/reducers/user/index.js","redux/store/index.js","index.js"],"names":["editMedicine","payload","type","editExecuctive","edit_orders","filter","user","Login","props","showCLick1","form","document","getElementsByClassName","style","display","id","showCLick2","checkLogin","e","preventDefault","name","current","value","password","localStorage","setItem","info","log","getItem","allorders","orders","setState","success","alert","findUser","JSON","parse","find","item","firstName","a","details","stringify","creatorID","order","close","createRef","state","className","this","isLoggedIn","to","onClick","placeholder","ref","Component","connect","userReducer","checkUser","orderReducer","dispatch","Executive","data","Manager","Home","component","Navbar","logOut","removeItem","logouting","nextProps","nextState","href","logout","PureComponent","AddMedicine","createMedicine","medicines","manufacturer","price","stock","discount","medicine","uuidv4","push","created","addNewMedicine","for","required","ViewMedicines","deleteMedicineClick","currentTarget","items","deleteMedicine","findMedicine","edit_medicine","length","map","medicineReducer","send_medicine","EditMedicine","index","findIndex","editedmedicine","splice","update","edited","mName","mManufacturer","mPrice","mStock","mDiscount","onChange","target","AddExecutive","addNewExecutive","gender","executives","fName","lName","dob","experience","genders","getElementsByName","genderr","checked","newExecutive","lastName","dateOfBirth","experienceYears","add","textAlign","ViewExecutives","deleteExecutiveClick","delete","findExecutive","executive","edit","team","executiveReducer","send_executive","EditExecutive","editExecutive","edit_executive","Order","addMedicine","quantity","getElementById","addMed","tillMed","addedMedicines","total","all","al","amount","parseInt","console","totalAmount","createOrder","allOrders","filteredOrders","newOrder","customerName","contactNumber","contact","products","orderId","searchMed","search","toLowerCase","includes","min","ViewOrders","deleteOrder","findOrder","med","EditOrder","editOrder","foundOrder","odrderIndex","customer","App","exact","path","ViewExecutive","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.d990192e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nexport const editMedicine = (payload) => ({\r\n    type: \"edit_medicine\",\r\n    payload\r\n}) \r\nexport const send_medicine = (payload) => ({\r\n    type: \"medicine\",\r\n    payload\r\n})\r\nexport const editExecuctive = (payload) => ({\r\n    type: \"edit_executive\",\r\n    payload\r\n})\r\nexport const send_executive = (payload) => ({\r\n    type:\"executive\",\r\n    payload\r\n})\r\nexport const edit_orders = (payload) => ({\r\n    type:\"edit_orders\",\r\n    payload\r\n})\r\nexport const filter = (payload) => ({\r\n    type: \"filter\",\r\n    payload\r\n})\r\nexport const findOrder = (payload) => ({\r\n    type: \"find_order\",\r\n    payload\r\n})\r\nexport const user = (payload) => ({\r\n    type: \"user\",\r\n    payload\r\n})","import React, { Component, createRef } from \"react\";\r\nimport \"./style.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { user, filter} from \"../../redux/action\";\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.name  = createRef();\r\n        this.password = createRef();\r\n        this.state = {\r\n            success: false,\r\n        }\r\n    }\r\n    showCLick1 = () => {\r\n      const form =  document.getElementsByClassName(\"login\")[0];\r\n      form.style.display = \"flex\";\r\n      form.id = \"manager\"\r\n    }\r\n    showCLick2 = () => {\r\n        const form =  document.getElementsByClassName(\"login\")[0];\r\n        form.style.display = \"flex\";\r\n        form.id = \"executive\"\r\n      }\r\n    checkLogin = (e) => {\r\n        e.preventDefault();\r\n        const form =  document.getElementsByClassName(\"login\")[0];\r\n        if(form.id === \"manager\"){\r\n            const user = this.name.current.value;\r\n            const password = this.password.current.value;\r\n            if(user === \"test-admin\" && password === \"test-admin\") {\r\n                localStorage.setItem(\"logged\", \"manager\");\r\n                const user = localStorage.getItem(\"logged\")\r\n                const info = {\r\n                    log: false,\r\n                    user: user\r\n                }\r\n                this.props.user(info);\r\n                localStorage.setItem(\"log\", false);\r\n                const allorders = this.props.orders;\r\n                this.props.filter(allorders);\r\n                this.setState({success: true});\r\n            } else {\r\n                alert(\"wrong username or password\")\r\n            }\r\n        } else if(form.id === \"executive\"){\r\n            const user = this.name.current.value;\r\n            const password = this.password.current.value;\r\n            const users = JSON.parse(localStorage.getItem(\"executives\")) === null ? [] : JSON.parse(localStorage.getItem(\"executives\"));\r\n            const findUser = users.find(item => item.firstName === user);\r\n            if(findUser){\r\n                   if(findUser.password === password){\r\n                    const order = async () => {\r\n                    const details = findUser.id;\r\n                    await localStorage.setItem(\"logged\", JSON.stringify(details));\r\n                    const user = localStorage.getItem(\"logged\")\r\n                    const info = {\r\n                        log: false,\r\n                        user: user\r\n                    }\r\n                    this.props.user(info)\r\n                    const allorders = this.props.orders;\r\n                    const filter = allorders.filter(item => item.creatorID == user); \r\n                    this.props.filter(filter)\r\n                    this.setState({success: true});\r\n                    }\r\n                    order();\r\n                   }\r\n            }else if(user === \"test-sales\" && password === \"test-sales\") {\r\n                const order = async () => {\r\n                await localStorage.setItem(\"logged\", \"executive\");\r\n                const user = localStorage.getItem(\"logged\")\r\n                const info = {\r\n                    log: false,\r\n                    user: user\r\n                }\r\n                this.props.user(info)\r\n                const allorders = this.props.orders;\r\n                const filter = await allorders.filter(item => item.creatorID == user); \r\n                this.props.filter(filter);\r\n                this.setState({success: true});\r\n                }\r\n                order()\r\n            } else {\r\n                alert(\"wrong username or password\")\r\n            }\r\n        }\r\n    }\r\n    close = () => {\r\n        const form =  document.getElementsByClassName(\"login\")[0];\r\n        form.style.display = \"none\";\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"main\">\r\n                {this.props.isLoggedIn && < Redirect to=\"/home\" />}\r\n                <h1>Login Page</h1>\r\n                <article onClick={this.showCLick1}>\r\n                 Manager\r\n                </article>\r\n                <article onClick={this.showCLick2}>\r\n                    Sales Executive\r\n                </article>\r\n                <form className=\"login\">\r\n                    <button onClick={this.close} id=\"close\" type=\"button\">&#10006;</button>\r\n                    <input placeholder=\"Enter first name or username\" ref={this.name} className=\"form-control\" type=\"text\"></input>\r\n                    <input placeholder=\"Enter Password\" ref={this.password} className=\"form-control\" type=\"password\"></input>\r\n                    <button onClick={this.checkLogin} className=\"btn btn-warning btn-lg\">Login</button>\r\n                    {this.state.success && < Redirect to=\"/home\" />}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.userReducer.checkUser,\r\n    orders: state.orderReducer.orders\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    user: (payload) => dispatch(user(payload)),\r\n    filter: (payload) => dispatch(filter(payload)) \r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { filter } from \"../../redux/action\";\r\n\r\nclass Executive extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    } \r\n    data = () => {\r\n        if(this.props.user !== \"manager\"){\r\n          const orders = this.props.orders.filter(item => item.creatorID == this.props.user);\r\n           this.props.filter(orders)\r\n        } else {\r\n            const orders = this.props.orders;\r\n            this.props.filter(orders)\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"main\">\r\n                <Link to={\"/new_order\"}>\r\n                <article>Create Order</article>\r\n                </Link>\r\n                <Link to={\"/view_orders\"}>\r\n                <article onClick={this.data}>View All Orders</article>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    orders: state.orderReducer.orders,\r\n    user: state.userReducer.checkUser\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    filter: (payload) => dispatch(filter(payload)) \r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Executive);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\"\r\nclass Manager extends Component{\r\n    constructor(props){\r\n       super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"main\">\r\n                <Link to={\"/add_medicine\"}>\r\n                <article>Add New Medicines</article>\r\n                </Link>\r\n                <Link to={\"/view_medicines\"}>\r\n                <article>View All Medicines</article>\r\n                </Link>\r\n                <Link to={\"/add_executive\"}> \r\n                <article>Add New Sales Executive</article>\r\n                </Link>\r\n                <Link to={\"/view_executives\"}>\r\n                <article>View Sales Team</article>\r\n                </Link>\r\n                <Link to={\"/manage_orders\"}>\r\n                <article>Manage Orders</article>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Manager;","import React, { Component } from \"react\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport Executive from \"../executive\";\r\nimport Manager from \"../manger\";\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checkUser: localStorage.getItem(\"logged\")\r\n        }\r\n    }\r\n    render(){\r\n        return( \r\n           <Route component={() => {\r\n               if(this.state.checkUser === \"manager\"){\r\n                   return(\r\n                       <div><Manager/></div>\r\n                   )\r\n               } else if(this.state.checkUser === \"executive\" || this.state.checkUser){\r\n                return(\r\n                    <div><Executive/></div>\r\n                )\r\n               } else {\r\n                   return(\r\n                       <div>{<Redirect to={\"/\"} />}</div>\r\n                   )\r\n                }\r\n           }}/>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { user } from \"../../redux/action\";\r\nimport \"./style.css\"\r\nclass Navbar extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n    }\r\n    logOut = () => {\r\n        localStorage.removeItem(\"logged\");\r\n        const logData = {\r\n            log: true,\r\n            user: null\r\n        }\r\n        this.props.logouting(logData);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.props.logOut === nextProps){\r\n            return false\r\n        }else return true\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"ms-5 me-5 container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">myMEDICINCES.com</a>\r\n                    {localStorage.getItem(\"logged\")  ? \r\n                        <div>\r\n                            <Link to={\"/home\"}>\r\n                            <button id=\"home\" className=\"btn btn-warning me-3\">home</button>\r\n                            </Link>\r\n                            <button id=\"logout\" onClick={this.logOut} className=\"btn btn-danger\">LogOut</button>\r\n                        </div>  : \"\"\r\n                    }\r\n                    {this.props.logout && <Redirect to=\"/\" />}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    logout: state.userReducer.logout\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    logouting: (payload) => dispatch(user(payload))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { editMedicine } from \"../../redux/action\";\r\nimport {v4 as uuidv4} from \"uuid\"\r\nimport \"./style.css\"\r\nclass AddMedicine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.name = createRef();\r\n        this.manufacturer = createRef();\r\n        this.price = createRef();\r\n        this.stock = createRef();\r\n        this.discount = createRef();\r\n        this.state = {\r\n            created: false\r\n        }\r\n    }\r\n    createMedicine = () => {\r\n        const medicines = JSON.parse(localStorage.getItem(\"medicines\")) === null ? [] : JSON.parse(localStorage.getItem(\"medicines\"));\r\n        const name = this.name.current.value;\r\n        const manufacturer = this.manufacturer.current.value;\r\n        const price = this.price.current.value;\r\n        const stock = this.stock.current.value;\r\n        const discount = this.discount.current.value;\r\n        if(name !== \"\", manufacturer !== \"\",price !== \"\", stock !== \"\", discount !== \"\"){\r\n        const medicine = {\r\n            name: name,\r\n            manufacturer: manufacturer,\r\n            price: price,\r\n            stock: stock,\r\n            discount: discount,\r\n            id: uuidv4()\r\n        }\r\n        medicines.push(medicine);\r\n        localStorage.setItem(\"medicines\", JSON.stringify(medicines))\r\n        this.setState({created: true});\r\n        this.props.addNewMedicine(medicines);\r\n    }\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"main\">\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"name\" className=\"form-label\">Medicine Name</label>\r\n                    <input ref={this.name} type=\"text\" className=\"form-control\" id=\"name\" required/>\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"manufacturer\" className=\"form-label\">Manufacturer</label>\r\n                    <input ref={this.manufacturer} type=\"text\" className=\"form-control\" id=\"manufacturer\" required/>\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"price\" className=\"form-label\">Price</label>\r\n                    <input ref={this.price} type=\"number\" className=\"form-control\" id=\"price\" required/>\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"stock\" className=\"form-label\">Stock</label>\r\n                    <input ref={this.stock} type=\"number\" className=\"form-control\" id=\"stock\" required/>\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"discount\" className=\"form-label\">Discount</label>\r\n                    <input ref={this.discount} type=\"number\" className=\"form-control\" id=\"discount\" required/>\r\n                </div>\r\n                <button onClick={this.createMedicine} className=\"btn btn-success\">Add Medicine</button>\r\n                {this.state.created && <Redirect to=\"/view_medicines\"/>}\r\n            </form>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addNewMedicine: (payload) => dispatch(editMedicine(payload))\r\n})\r\nexport default connect(null, mapDispatchToProps)(AddMedicine);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.css\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { editMedicine, send_medicine } from \"../../redux/action\";\r\nclass ViewMedicines extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    deleteMedicineClick = (e) => {\r\n        const medicines = this.props.medicines;\r\n        const id = e.currentTarget.id;\r\n        const items = medicines.filter(item => item.id !== id);\r\n        localStorage.setItem(\"medicines\",JSON.stringify(items));\r\n        this.props.deleteMedicine(items);\r\n    }\r\n    findMedicine = (e) => {\r\n        const medicines = this.props.medicines;\r\n        const id = e.currentTarget.id;\r\n        const medicine = medicines.find(item => item.id === id);\r\n        this.props.edit_medicine(medicine)\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"medicine-wrap\">\r\n             {this.props.medicines.length > 0 ?  this.props.medicines.map(item => (\r\n                 <div className=\"medView\">\r\n                    <p><b>Medicine Name:</b> {item.name}</p>\r\n                    <p><b>Manufacturer Name:</b> {item.manufacturer}</p>\r\n                    <p><b>Medicine Price:</b> Rs {item.price}</p>\r\n                    <p><b>Total Discount:</b> {item.discount}%</p>\r\n                    <p><b>Available Stock:</b> {item.stock} pieces</p>\r\n                    <Link to={\"/edit_medicine\"}>\r\n                    <button onClick={this.findMedicine} id={item.id} className=\"btn btn-warning\">Edit</button>\r\n                    </Link>\r\n                    <button onClick={this.deleteMedicineClick} id={item.id} className=\"btn btn-danger ms-2\">Delete</button>\r\n                 </div>\r\n             )) : <h1>No Medicines Available</h1>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    medicines: state.medicineReducer.medicines\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteMedicine: (payload) => dispatch(editMedicine(payload)),\r\n    edit_medicine: (payload) => dispatch(send_medicine(payload))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewMedicines);","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { editMedicine } from \"../../redux/action\";\r\n\r\nclass EditMedicine extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.name = createRef();\r\n        this.manufacturer = createRef();\r\n        this.price = createRef();\r\n        this.stock = createRef();\r\n        this.discount = createRef();\r\n        this.state = {\r\n            mName: this.props.medicine.name,\r\n            mManufacturer: this.props.medicine.manufacturer,\r\n            mPrice: this.props.medicine.price,\r\n            mStock: this.props.medicine.stock,\r\n            mDiscount: this.props.medicine.discount,\r\n            edited: false\r\n        }\r\n        \r\n    }\r\n    editMedicine = () => {\r\n        const medicine = this.props.medicine;\r\n        const medicines = JSON.parse(localStorage.getItem(\"medicines\"));\r\n        const index = medicines.findIndex(item => item.id === medicine.id);\r\n        const name = this.name.current.value;\r\n        const manufacturer = this.manufacturer.current.value;\r\n        const price = this.price.current.value;\r\n        const stock = this.stock.current.value;\r\n        const discount = this.discount.current.value;\r\n        const editedmedicine = {\r\n            name: name,\r\n            manufacturer: manufacturer,\r\n            price: price,\r\n            stock: stock,\r\n            discount: discount,\r\n            id: medicine.id\r\n        }\r\n        \r\n        medicines.splice(index, 1 , editedmedicine);\r\n        localStorage.setItem(\"medicines\", JSON.stringify(medicines))\r\n        this.props.update(medicines)\r\n        this.setState({edited: true})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"main\">\r\n            <div className=\"mb-1 width\">\r\n                <label for=\"name\" className=\"form-label\">Medicine Name</label>\r\n                <input onChange={(e) => this.setState({mName: e.target.value})} value={this.state.mName} ref={this.name} type=\"text\" className=\"form-control\" id=\"name\" />\r\n            </div>\r\n            <div className=\"mb-1 width\">\r\n                <label for=\"manufacturer\" className=\"form-label\">Manufacturer</label>\r\n                <input onChange={(e) => this.setState({mManufacturer: e.target.value})} value={this.state.mManufacturer} ref={this.manufacturer} type=\"text\" className=\"form-control\" id=\"manufacturer\" />\r\n            </div>\r\n            <div className=\"mb-1 width\">\r\n                <label for=\"price\" className=\"form-label\">Price</label>\r\n                <input onChange={(e) => this.setState({mPrice: e.target.value})} value={this.state.mPrice} ref={this.price} type=\"number\" className=\"form-control\" id=\"price\" />\r\n            </div>\r\n            <div className=\"mb-1 width\">\r\n                <label for=\"stock\" className=\"form-label\">Stock</label>\r\n                <input onChange={(e) => this.setState({mStock: e.target.value})} value={this.state.mStock} ref={this.stock} type=\"number\" className=\"form-control\" id=\"stock\" />\r\n            </div>\r\n            <div className=\"mb-1 width\">\r\n                <label for=\"discount\" className=\"form-label\">Discount</label>\r\n                <input onChange={(e) => this.setState({mDiscount: e.target.value})} value={this.state.mDiscount} ref={this.discount} type=\"number\" className=\"form-control\" id=\"discount\" />\r\n            </div>\r\n            <button onClick={this.editMedicine} className=\"btn btn-success\">Edit Medicine</button>\r\n            {this.state.edited && <Redirect to=\"/view_medicines\"/>}\r\n        </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    medicine: state.medicineReducer.edit_medicine\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    update: (payload) => dispatch(editMedicine(payload))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditMedicine);","import React, { Component , createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { editExecuctive } from \"../../redux/action\";\r\nimport {v4 as uuidv4} from \"uuid\"\r\nclass AddExecutive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.lName = createRef();\r\n        this.fName = createRef();\r\n        this.dob = createRef();\r\n        this.experience = createRef();\r\n        this.password = createRef();\r\n        this.state = {\r\n            created: false\r\n        }\r\n    }\r\n    addNewExecutive = (e) => {\r\n        e.preventDefault();\r\n        const executives = JSON.parse(localStorage.getItem(\"executives\")) === null ? [] : JSON.parse(localStorage.getItem(\"executives\"));\r\n        const fName = this.fName.current.value;\r\n        const lName = this.lName.current.value;\r\n        const dob = this.dob.current.value;\r\n        const experience = this.experience.current.value;\r\n        const password = this.password.current.value;\r\n        const genders = document.getElementsByName(\"gender\");\r\n        let gender;\r\n        for(let genderr of genders){\r\n            if(genderr.checked){\r\n               gender = genderr.value\r\n            }\r\n        }\r\n        if(fName !== \"\" && lName !== \"\" && dob !== \"\" &&experience !== \"\" && password !== \"\" ){\r\n        const newExecutive = {\r\n            firstName: fName,\r\n            lastName: lName,\r\n            dateOfBirth: dob,\r\n            gender: gender,\r\n            experienceYears: experience,\r\n            password: password,\r\n            id: uuidv4()\r\n        }\r\n        executives.push(newExecutive);\r\n        localStorage.setItem(\"executives\", JSON.stringify(executives));\r\n        this.props.add(executives)\r\n        this.setState({created: true})\r\n    } else{\r\n         alert(\"Please Fill All The Input Fields\")\r\n    }\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"main\">\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"fName\" className=\"form-label\">First Name</label>\r\n                    <input ref={this.fName} type=\"text\" className=\"form-control\" id=\"fName\"  />\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"lName\" className=\"form-label\">Last Name</label>\r\n                    <input ref={this.lName} type=\"text\" className=\"form-control\" id=\"lName\"  />\r\n                </div>\r\n                <div style={{textAlign:\"left\"}} className=\"mb-1 width\">\r\n                    <label for=\"dob\" className=\"form-label\">Date of Birth</label>\r\n                    <input ref={this.dob} type=\"date\" className=\"form-control\" id=\"dob\"  />\r\n                </div>\r\n                <div >\r\n                    Gender: <br/>\r\n                    <input value=\"male\" type=\"radio\" name=\"gender\" id=\"male\" />\r\n                    <label  for=\"male\">\r\n                       Male\r\n                    </label>\r\n                    <input value=\"female\" type=\"radio\" name=\"gender\" id=\"female\" />\r\n                    <label  for=\"female\">\r\n                       Female\r\n                    </label>\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"experience\" className=\"form-label\">Experience Years</label>\r\n                    <input ref={this.experience} type=\"number\" className=\"form-control\" id=\"experience\"  />\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"password\" className=\"form-label\">Password</label>\r\n                    <input ref={this.password} type=\"password\" className=\"form-control\" id=\"password\"  />\r\n                </div>\r\n                <button onClick={this.addNewExecutive} className=\"btn btn-success\">Add Executive</button>\r\n                {this.state.created && <Redirect to=\"/view_executives\"/>}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    add: (payload) => dispatch(editExecuctive(payload))\r\n})\r\nexport default connect(null, mapDispatchToProps)(AddExecutive);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.css\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { editExecuctive, send_executive } from \"../../redux/action\";\r\nclass ViewExecutives extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    deleteExecutiveClick = (e) => {\r\n        const executives = JSON.parse(localStorage.getItem(\"executives\"));\r\n        const id = e.currentTarget.id;\r\n        const items = executives.filter(item => item.id !== id);\r\n        localStorage.setItem(\"executives\", JSON.stringify(items));\r\n        this.props.delete(items);\r\n    }\r\n    findExecutive = (e) => {\r\n        const executives = JSON.parse(localStorage.getItem(\"executives\"));\r\n        const id = e.currentTarget.id;\r\n        const executive = executives.find(item => item.id === id);\r\n        this.props.edit(executive)\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"team-wrap\">\r\n                {this.props.team.length > 0 ?  this.props.team.map(item => (\r\n                    <div className=\"team-member\">\r\n                        <p><b>First Name:</b> {item.firstName}</p>\r\n                        <p><b>Last Name:</b> {item.lastName}</p>\r\n                        <p><b>Experience Years:</b>  {item.experienceYears} Years</p>\r\n                        <p><b>Date Of Birth:</b> {item.dateOfBirth}</p>\r\n                        <p><b>Gender:</b> {item.gender}</p>\r\n                        <p><b>Password:</b> {item.password}</p>\r\n                        <Link to={\"/edit_executive\"}>\r\n                            <button onClick={this.findExecutive} id={item.id} className=\"btn btn-warning\">Edit</button>\r\n                        </Link>\r\n                        <button onClick={this.deleteExecutiveClick} id={item.id} className=\"btn btn-danger ms-2\">Delete</button>\r\n                    </div>\r\n                )) : <h1>No Sales Executive Available</h1>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    team: state.executiveReducer.team\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    delete: (payload) => dispatch(editExecuctive(payload)),\r\n    edit: (payload) => dispatch(send_executive(payload))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewExecutives);","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { editExecuctive } from \"../../redux/action\";\r\nclass EditExecutive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.lName = createRef();\r\n        this.fName = createRef();\r\n        this.dob = createRef();\r\n        this.experience = createRef();\r\n        this.password = createRef();\r\n        this.state = {\r\n            created: false,\r\n            fName: this.props.executive.firstName,\r\n            lName: this.props.executive.lastName,\r\n            password: this.props.executive.password,\r\n            dob: this.props.executive.dateOfBirth,\r\n            experience: this.props.executive.experienceYears,\r\n            gender: this.props.executive.gender\r\n        }\r\n    }\r\n    editExecutive = () => {\r\n        const executive = this.props.executive;\r\n        const executives = JSON.parse(localStorage.getItem(\"executives\"));\r\n        const index = executives.findIndex(item => item.id === executive.id);\r\n        const fName = this.fName.current.value;\r\n        const lName = this.lName.current.value;\r\n        const dob = this.dob.current.value;\r\n        const experience = this.experience.current.value;\r\n        const password = this.password.current.value;\r\n        const genders = document.getElementsByName(\"gender\");\r\n        let gender;\r\n        for(let genderr of genders){\r\n            if(genderr.checked){\r\n               gender = genderr.value\r\n            }\r\n        }\r\n        const newExecutive = {\r\n            firstName: fName,\r\n            lastName: lName,\r\n            dateOfBirth: dob,\r\n            gender: gender,\r\n            experienceYears: experience,\r\n            password: password,\r\n            id: executive.id\r\n        }\r\n        executives.splice(index, 1 , newExecutive);\r\n        localStorage.setItem(\"executives\", JSON.stringify(executives))\r\n        this.props.update(executives)\r\n        this.setState({created: true})\r\n    }\r\nrender() {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"mb-1 width\">\r\n                <label for=\"fName\" className=\"form-label\">First Name</label>\r\n                <input onChange={(e) => this.setState({fName: e.target.value})} value={this.state.fName} ref={this.fName} type=\"text\" className=\"form-control\" id=\"fName\" />\r\n            </div>\r\n            <div className=\"mb-1 width\">\r\n                <label for=\"lName\" className=\"form-label\">Last Name</label>\r\n                <input onChange={(e) => this.setState({lName: e.target.value})} value={this.state.lName} ref={this.lName} type=\"text\" className=\"form-control\" id=\"lName\" />\r\n            </div>\r\n            <div style={{ textAlign: \"left\" }} className=\"mb-1 width\">\r\n                <label for=\"dob\" className=\"form-label\">Date of Birth</label>\r\n                <input onChange={(e) => this.setState({dob: e.target.value})} value={this.state.dob}  ref={this.dob} type=\"date\" className=\"form-control\" id=\"dob\" />\r\n            </div>\r\n            <div >\r\n                Gender: <br />\r\n                <input  value=\"male\" type=\"radio\" name=\"gender\" id=\"male\" />\r\n                <label for=\"male\">\r\n                    Male\r\n                </label>\r\n                <input  value=\"female\" type=\"radio\" name=\"gender\" id=\"female\" />\r\n                <label for=\"female\">\r\n                    Female\r\n                </label>\r\n            </div>\r\n            <div className=\"mb-1 width\">\r\n                <label onChange={(e) => this.setState({experience: e.target.value})} value={this.state.experience} for=\"experience\" className=\"form-label\">Experience Years</label>\r\n                <input ref={this.experience} type=\"number\" className=\"form-control\" id=\"experience\" />\r\n            </div>\r\n            <div className=\"mb-1 width\">\r\n                <label onChange={(e) => this.setState({password: e.target.value})} value={this.state.password} for=\"password\" className=\"form-label\">Password</label>\r\n                <input ref={this.password} type=\"password\" className=\"form-control\" id=\"password\" />\r\n            </div>\r\n            <button onClick={this.editExecutive} className=\"btn btn-success\">Edit Executive</button>\r\n            {this.state.created && <Redirect to=\"/view_executives\" />}\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    executive: state.executiveReducer.edit_executive\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n   update: (payload) => dispatch(editExecuctive(payload))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExecutive);","import React, { Component , createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.css\";\r\nimport {Link, Redirect} from \"react-router-dom\"\r\nimport { edit_orders, filter } from \"../../redux/action\";\r\nimport {v4 as uuidv4} from \"uuid\"\r\nclass Order extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.name = createRef();\r\n        this.contact = createRef();\r\n        this.amount = createRef();\r\n        this.quantity = createRef();\r\n        this.search = createRef();\r\n        this.state = {\r\n            addedMedicines: [],\r\n            totalAmount: 0,\r\n            medicines: this.props.medicines,\r\n            created: false\r\n        }\r\n    }\r\n    addMedicine = (e) => {\r\n        const medicines = this.props.medicines;\r\n        const id = e.currentTarget.id;\r\n        const medicine = medicines.find(item => item.id === id);\r\n        const quantity = document.getElementById(medicine.name).value;\r\n        const addMed = {\r\n            name: medicine.name,\r\n            price: medicine.price,\r\n            quantity: quantity,\r\n            discount: medicine.discount\r\n        }\r\n        const tillMed = this.state.addedMedicines;\r\n        tillMed.push(addMed)\r\n        let total = 0;\r\n        this.setState({addedMedicines: tillMed}, () => {\r\n            const all =  this.state.addedMedicines;\r\n            for(let al of all) {\r\n                let amount = ((parseInt(al.price) * parseInt(al.quantity)))\r\n                let discount = ((amount / 100) * parseInt(al.discount))\r\n                total += (amount - discount) \r\n                console.log(total, amount, al.quantity)\r\n            }\r\n            this.setState({totalAmount: total})\r\n        })\r\n        \r\n    }\r\n    createOrder = () => {\r\n          const allOrders = JSON.parse(localStorage.getItem(\"orders\")) === null ? [] : JSON.parse(localStorage.getItem(\"orders\"));\r\n          const filteredOrders = this.props.filteredOrders;\r\n          const customer = this.name.current.value;\r\n          const contact = this.contact.current.value;\r\n          const products = this.state.addedMedicines;\r\n          const total = this.state.totalAmount;\r\n          const orderId = uuidv4();\r\n          const newOrder = {\r\n              customerName: customer,\r\n              contactNumber: contact,\r\n              products: products,\r\n              totalAmount: total,\r\n              orderId: orderId,\r\n              creatorID: this.props.user\r\n          }\r\n          allOrders.push(newOrder);\r\n          filteredOrders.push(newOrder);\r\n          localStorage.setItem(\"orders\", JSON.stringify(allOrders))\r\n          const data = {\r\n              orders: allOrders,\r\n              filter: filteredOrders\r\n          }\r\n          this.props.update(data);\r\n          this.setState({created: true})\r\n    }\r\n    searchMed = () => {\r\n       const search = this.search.current.value;\r\n       const medicines = this.props.medicines;\r\n       const filter = medicines.filter(item => item.name.toLowerCase().includes(search));\r\n       this.setState({medicines: filter})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"main\">\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"name\" className=\"form-label\">Customer Name</label>\r\n                    <input ref={this.name} type=\"text\" className=\"form-control\" id=\"name\" />\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"contact\" className=\"form-label\">Contact Number</label>\r\n                    <input ref={this.contact} type=\"number\" className=\"form-control\" id=\"contact\" />\r\n                </div>\r\n                <p  className=\"form-label\">Select Medicine</p>\r\n                <div id=\"product\" className=\"mb-1\">\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"search\" className=\"form-label\">Search Medicines</label>\r\n                    <input  onChange={this.searchMed} ref={this.search} type=\"text\" className=\"form-control\" id=\"search\" />\r\n                </div>\r\n                {this.state.medicines.length > 0 ?  this.state.medicines.map(item => (\r\n                 <div className=\"addMedicine\">\r\n                    <p><b>Medicine Name:</b> {item.name}</p>\r\n                    <p><b>Medicine Price:</b> Rs {item.price}</p>\r\n                    <p><b>Total Discount:</b> {item.discount}%</p>\r\n                    <input type=\"number\" id={item.name} min=\"0\" placeholder=\"Enter Quantity\" className=\"quantity\" name=\"quantity\"></input>\r\n                    <button onClick={this.addMedicine} id={item.id} className=\"btn btn-warning ms-2\">Add</button>\r\n                   \r\n                 </div>\r\n             )) : <h1>No Medicines Available</h1>}\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"amount\" className=\"form-label\">Total Amount: {this.state.totalAmount}</label>\r\n                </div>\r\n                <button onClick={this.createOrder} className=\"btn btn-success\">Create Order</button>\r\n                {this.state.created && <Redirect to={\"/view_orders\"}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    medicines: state.medicineReducer.medicines,\r\n    user: state.userReducer.checkUser,\r\n    orders : state.orderReducer.orders,\r\n    filteredOrders: state.orderReducer.filteredOrders\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n     update: (payload) => dispatch(edit_orders(payload)),\r\n     filter: (payload) => dispatch(filter(payload))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { edit_orders, findOrder } from \"../../redux/action\";\r\nimport \"./style.css\"\r\nclass ViewOrders extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    \r\n    }\r\n    deleteOrder = (e) => {\r\n        const orders = this.props.orders;\r\n        const filteredOrders = this.props.filteredOrders;\r\n        const id = e.currentTarget.id;\r\n        const items = orders.filter(item => item.orderId !== id);\r\n        const filterItems = filteredOrders.filter(item => item.orderId !== id);\r\n        const update = {\r\n            orders: items,\r\n            filter: filterItems\r\n        }\r\n        localStorage.setItem(\"orders\",JSON.stringify(items));\r\n        this.props.update(update);\r\n    }\r\n    findOrder = (e) => {\r\n        const orders = this.props.orders;\r\n        const id = e.currentTarget.id;\r\n        const order = orders.find(item => item.orderId === id);\r\n        this.props.find(order)\r\n    }\r\n    render(){\r\n        return(<div id=\"orders\">\r\n            \r\n            {this.props.filteredOrders.length > 0 ?  this.props.filteredOrders.map(item => (\r\n                 <div className=\"medView\">\r\n                    <p><b>Customer Name:</b> {item.customerName}</p>\r\n                    <p><b>Contact Number:</b> {item.contactNumber}</p>\r\n                    <p><b>Medicines:</b></p>\r\n                    <div id=\"medWrap\">\r\n                    {item.products.map(med => (\r\n                        <div className=\"insideMed\">\r\n                        <p>Name: {med.name}</p>\r\n                        <p>x {med.quantity}</p>\r\n                        <p>Rs {med.price}</p>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                    <p><b>Total Amount:</b> Rs {item.totalAmount}</p>\r\n                    <Link to={\"/edit_order\"}>\r\n                    <button onClick={this.findOrder} id={item.orderId} className=\"btn btn-warning\">Edit</button>\r\n                    </Link>\r\n                    <button onClick={this.deleteOrder} id={item.orderId} className=\"btn btn-danger ms-2\">Delete</button>\r\n                 </div>\r\n             )) : <h1>No Orders Available</h1>}\r\n        </div>)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    filteredOrders: state.orderReducer.filteredOrders,\r\n    user: state.userReducer.checkUser,\r\n    orders: state.orderReducer.orders\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    update: (payload) => dispatch(edit_orders(payload)),\r\n    find: (payload) => dispatch(findOrder(payload))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrders);","import React, { Component , createRef} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { edit_orders } from \"../../redux/action\";\r\n\r\nclass EditOrder extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.name = createRef();\r\n        this.contact = createRef();\r\n        this.amount = createRef();\r\n        this.quantity = createRef();\r\n        this.search = createRef();\r\n        this.state = {\r\n            addedMedicines: [],\r\n            totalAmount: 0,\r\n            medicines: this.props.medicines,\r\n            created: false,\r\n            customer: this.props.foundOrder.customerName,\r\n            contact: this.props.foundOrder.contactNumber\r\n        }\r\n    }\r\n    addMedicine = (e) => {\r\n        const medicines = this.props.medicines;\r\n        const id = e.currentTarget.id;\r\n        const medicine = medicines.find(item => item.id === id);\r\n        const quantity = document.getElementById(medicine.name).value;\r\n        const addMed = {\r\n            name: medicine.name,\r\n            price: medicine.price,\r\n            quantity: quantity,\r\n            discount: medicine.discount\r\n        }\r\n        const tillMed = this.state.addedMedicines;\r\n        tillMed.push(addMed)\r\n        let total = 0;\r\n        this.setState({addedMedicines: tillMed}, () => {\r\n            const all =  this.state.addedMedicines;\r\n            for(let al of all) {\r\n                let amount = ((parseInt(al.price) * parseInt(al.quantity)))\r\n                let discount = ((amount / 100) * parseInt(al.discount))\r\n                total += (amount - discount) \r\n                console.log(total, amount, al.quantity)\r\n            }\r\n            this.setState({totalAmount: total})\r\n        })\r\n        \r\n    }\r\n    editOrder = () => {\r\n          const allOrders = JSON.parse(localStorage.getItem(\"orders\")) === null ? [] : JSON.parse(localStorage.getItem(\"orders\"));\r\n          const filteredOrders = this.props.filteredOrders;          \r\n          const foundOrder = this.props.foundOrder;\r\n          const odrderIndex = allOrders.findIndex(item => item.orderId === foundOrder.orderId);\r\n          const index = filteredOrders.findIndex(item => item.orderId === foundOrder.orderId)\r\n          const customer = this.name.current.value;\r\n          const contact = this.contact.current.value;\r\n          const products = this.state.addedMedicines;\r\n          const total = this.state.totalAmount;\r\n          const newOrder = {\r\n              customerName: customer,\r\n              contactNumber: contact,\r\n              products: products,\r\n              totalAmount: total,\r\n              orderId: foundOrder.orderId,\r\n              creatorID: this.props.user\r\n          }\r\n          allOrders.splice(odrderIndex, 1 , newOrder);\r\n          filteredOrders.splice(index, 1 , newOrder)\r\n          localStorage.setItem(\"orders\", JSON.stringify(allOrders))\r\n          this.props.update({orders:allOrders, filter: filteredOrders});\r\n          this.setState({created: true})\r\n    }\r\n    searchMed = () => {\r\n       const search = this.search.current.value;\r\n       const medicines = this.props.medicines;\r\n       const filter = medicines.filter(item => item.name.toLowerCase().includes(search));\r\n       this.setState({medicines: filter})\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"main\">\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"name\"  className=\"form-label\">Customer Name</label>\r\n                    <input onChange={(e) => this.setState({customer: e.target.value})}  value={this.state.customer} ref={this.name} type=\"text\" className=\"form-control\" id=\"name\" />\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"contact\" className=\"form-label\">Contact Number</label>\r\n                    <input onChange={(e) => this.setState({contact: e.target.value})}  value={this.state.contact} ref={this.contact} type=\"number\" className=\"form-control\" id=\"contact\" />\r\n                </div>\r\n                <p  className=\"form-label\">Select Medicine</p>\r\n                <div id=\"product\" className=\"mb-1\">\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"search\" className=\"form-label\">Search Medicines</label>\r\n                    <input  onChange={this.searchMed} ref={this.search} type=\"text\" className=\"form-control\" id=\"search\" />\r\n                </div>\r\n                {this.state.medicines.length > 0 ?  this.state.medicines.map(item => (\r\n                 <div className=\"addMedicine\">\r\n                    <p><b>Medicine Name:</b> {item.name}</p>\r\n                    <p><b>Medicine Price:</b> Rs {item.price}</p>\r\n                    <p><b>Total Discount:</b> {item.discount}%</p>\r\n                    <input type=\"number\" id={item.name} placeholder=\"Enter Quantity\" className=\"quantity\" name=\"quantity\"></input>\r\n                    <button onClick={this.addMedicine} id={item.id} className=\"btn btn-warning ms-2\">Add</button>\r\n                   \r\n                 </div>\r\n             )) : <h1>No Medicines Available</h1>}\r\n                </div>\r\n                <div className=\"mb-1 width\">\r\n                    <label for=\"amount\" className=\"form-label\">Total Amount: {this.state.totalAmount}</label>\r\n                </div>\r\n                <button onClick={this.editOrder} className=\"btn btn-success\">Edit Order</button>\r\n                {this.state.created && <Redirect to={\"/view_orders\"}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    medicines: state.medicineReducer.medicines,\r\n    user: state.userReducer.checkUser,\r\n    foundOrder: state.orderReducer.findOrder,\r\n    filteredOrders: state.orderReducer.filteredOrders\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n     update: (payload) => dispatch(edit_orders(payload))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOrder);","import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\"\nimport Login from './components/login';\nimport Home from './components/home';\nimport Navbar from './components/nav';\nimport AddMedicine from './components/add_medicine';\nimport ViewMedicines from './components/view_medicines';\nimport EditMedicine from './components/edit_medicine';\nimport AddExecutive from './components/add_executive';\nimport ViewExecutive from \"./components/view_team\"\nimport EditExecutive from './components/edit_executive';\nimport Order from './components/order';\nimport ViewOrders from './components/view_orders';\nimport Executive from './components/executive';\nimport EditOrder from './components/edit_order'\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Navbar />\n    <Switch>\n      <Route exact path=\"/react_exam1\" component={Login}></Route>\n      <Route exact path=\"/\">\n        <Redirect to=\"/react_exam1\"></Redirect>\n      </Route>\n      <Route path=\"/home\" component={Home}></Route>\n      <Route path=\"/add_medicine\" component={AddMedicine}></Route>\n      <Route path=\"/view_medicines\" component={ViewMedicines}></Route>\n      <Route path=\"/edit_medicine\" component={EditMedicine}></Route>\n      <Route path=\"/add_executive\" component={AddExecutive}></Route>\n      <Route path=\"/view_executives\" component={ViewExecutive}></Route>\n      <Route path=\"/edit_executive\" component={EditExecutive}></Route>\n      <Route path=\"/new_order\" component={Order}></Route>\n      <Route path=\"/view_orders\" component={ViewOrders}></Route>\n      <Route path=\"/edit_order\" component={EditOrder}></Route>\n      <Route path=\"/manage_orders\" component={Executive}></Route>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    team: JSON.parse(localStorage.getItem(\"executives\")) === null ? [] :JSON.parse(localStorage.getItem(\"executives\")),\r\n    edit_executive: {}\r\n}\r\nconst executiveReducer = (state= initialState,{type, payload}) => {\r\n    switch(type){\r\n        case \"edit_executive\": {\r\n            return {...state, team: payload}\r\n        }\r\n        case \"executive\" : {\r\n            return {...state, edit_executive: payload}\r\n        }\r\n        default : {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport default executiveReducer;","const initialState = {\r\n    medicines:JSON.parse(localStorage.getItem(\"medicines\")) === null ? [] : JSON.parse(localStorage.getItem(\"medicines\")),\r\n    edit_medicine: {}\r\n}\r\nconst medicineReducer = (state= initialState,{type, payload}) => {\r\n    switch(type){\r\n        case \"edit_medicine\" : {\r\n            return {...state, medicines: payload}\r\n        }\r\n        case \"medicine\" : {\r\n            return {...state, edit_medicine: payload}\r\n        }\r\n        default : {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport default medicineReducer;","const initialState = {\r\n    orders: JSON.parse(localStorage.getItem(\"orders\")) === null ? [] : JSON.parse(localStorage.getItem(\"orders\")),\r\n    filteredOrders: [],\r\n    findOrder: {}\r\n}\r\nconst orderReducer = (state= initialState,{type, payload}) => {\r\n    switch(type){\r\n        case \"edit_orders\" : {\r\n            return {...state, orders: payload.orders , filteredOrders: payload.filter}\r\n        }\r\n        case \"filter\": {\r\n            return {...state, filteredOrders: [...payload]}\r\n        }\r\n        case \"find_order\": {\r\n            return {...state, findOrder: payload}\r\n        }\r\n        default : {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport default orderReducer;","const initialState = {\r\n    checkUser: localStorage.getItem(\"logged\"),\r\n    logout: localStorage.getItem(\"logged\") === null ? true : false\r\n}\r\nconst userReducer = (state = initialState,{type , payload}) => {\r\n    switch(type){\r\n        case \"user\": {\r\n            return {...state, logout: payload.log , checkUser: payload.user }\r\n        }\r\n        default : {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport default userReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport executiveReducer from \"../reducers/executive\";\r\nimport medicineReducer from \"../reducers/medicine\";\r\nimport orderReducer from \"../reducers/order\";\r\nimport userReducer from \"../reducers/user\"\r\nconst reducers = combineReducers({userReducer , executiveReducer , orderReducer , medicineReducer})\r\nconst store  = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}